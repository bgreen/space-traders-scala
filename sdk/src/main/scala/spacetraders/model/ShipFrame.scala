/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package spacetraders.model


  /**
   * The frame of the ship. The frame determines the number of modules and mounting points of the ship, as well as base fuel capacity. As the condition of the frame takes more wear, the ship will become more sluggish and less maneuverable.
   */
case class ShipFrame(
  /* Symbol of the frame. */
  symbol: ShipFrameEnums.Symbol,
  /* Name of the frame. */
  name: String,
  /* Description of the frame. */
  description: String,
  /* Condition is a range of 0 to 100 where 0 is completely worn out and 100 is brand new. */
  condition: Option[Int] = None,
  /* The amount of slots that can be dedicated to modules installed in the ship. Each installed module take up a number of slots, and once there are no more slots, no new modules can be installed. */
  moduleSlots: Int,
  /* The amount of slots that can be dedicated to mounts installed in the ship. Each installed mount takes up a number of points, and once there are no more points remaining, no new mounts can be installed. */
  mountingPoints: Int,
  /* The maximum amount of fuel that can be stored in this ship. When refueling, the ship will be refueled to this amount. */
  fuelCapacity: Int,
  requirements: ShipRequirements
)

object ShipFrameEnums {

  type Symbol = Symbol.Value
  object Symbol extends Enumeration {
    val FRAMEPROBE = Value("FRAME_PROBE")
    val FRAMEDRONE = Value("FRAME_DRONE")
    val FRAMEINTERCEPTOR = Value("FRAME_INTERCEPTOR")
    val FRAMERACER = Value("FRAME_RACER")
    val FRAMEFIGHTER = Value("FRAME_FIGHTER")
    val FRAMEFRIGATE = Value("FRAME_FRIGATE")
    val FRAMESHUTTLE = Value("FRAME_SHUTTLE")
    val FRAMEEXPLORER = Value("FRAME_EXPLORER")
    val FRAMEMINER = Value("FRAME_MINER")
    val FRAMELIGHTFREIGHTER = Value("FRAME_LIGHT_FREIGHTER")
    val FRAMEHEAVYFREIGHTER = Value("FRAME_HEAVY_FREIGHTER")
    val FRAMETRANSPORT = Value("FRAME_TRANSPORT")
    val FRAMEDESTROYER = Value("FRAME_DESTROYER")
    val FRAMECRUISER = Value("FRAME_CRUISER")
    val FRAMECARRIER = Value("FRAME_CARRIER")
  }

}
