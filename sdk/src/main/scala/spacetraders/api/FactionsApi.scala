/**
 * SpaceTraders API
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package spacetraders.api

import spacetraders.model.GetFaction200Response
import spacetraders.model.GetFactions200Response
import spacetraders.core.JsonSupport._
import sttp.client3._
import sttp.model.Method

object FactionsApi {

def apply(baseUrl: String = "https://api.spacetraders.io/v2") = new FactionsApi(baseUrl)
}

class FactionsApi(baseUrl: String) {

  /**
   * View the details of a faction.
   * 
   * Expected answers:
   *   code 200 : GetFaction200Response (Successfully fetched a faction.)
   * 
   * Available security schemes:
   *   AgentToken (http)
   * 
   * @param factionSymbol The faction symbol
   */
  def getFaction(bearerToken: String)(factionSymbol: String
): Request[Either[ResponseException[String, Exception], GetFaction200Response], Any] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/factions/${factionSymbol}")
      .contentType("application/json")
      .auth.bearer(bearerToken)
      .response(asJson[GetFaction200Response])

  /**
   * Return a paginated list of all the factions in the game.
   * 
   * Expected answers:
   *   code 200 : GetFactions200Response (Succesfully fetched factions.)
   * 
   * Available security schemes:
   *   AgentToken (http)
   * 
   * @param page What entry offset to request
   * @param limit How many entries to return per page
   */
  def getFactions(bearerToken: String)(page: Option[Int] = None, limit: Option[Int] = None
): Request[Either[ResponseException[String, Exception], GetFactions200Response], Any] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/factions?page=${ page }&limit=${ limit }")
      .contentType("application/json")
      .auth.bearer(bearerToken)
      .response(asJson[GetFactions200Response])

}
